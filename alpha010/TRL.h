#pragma once

#include <vector>

#include "ALL.h"
#include "TextRes.h"

/*--------------------------------------------------*/
namespace ss
/*--------------------------------------------------*/
{
	/*--------------------------------------------------*/
	typedef struct TRL_BASE
	/*--------------------------------------------------*/
	{
		/*--------------------------------------------------*/
		/*-------------Constructor/Desctructor--------------*/
		/*--------------------------------------------------*/

		/*--------------------------------------------------*/
		TRL_BASE()
		/*--------------------------------------------------*/
		{
			log("TRL_BASE_CLASS()");
			TRvec.reserve(10);
		}

		/*--------------------------------------------------*/
		~TRL_BASE() 
		/*--------------------------------------------------*/
			{ log("~TRL_BASE_CLASS()"); }

		/*--------------------------------------------------*/
		/*-------------Member Functions---------------------*/
		/*--------------------------------------------------*/

		/*--------------------------------------------------*/
		rt load_all_text(SDL_Renderer* _rend)
		/*--------------------------------------------------*/
		{
			rt ret = rt::INITIAL;
			for (TextRes* _tr : TRvec)
			{
				ret = _tr->load_text(_rend);
				if (ret != rt::SUCCESS) return ret;
			}
			return rt::SUCCESS;
		}
		/*--------------------------------------------------*/
		rt delete_all_text()
		/*--------------------------------------------------*/
		{
			rt ret = rt::INITIAL;
			for (TextRes* _tr : TRvec)
			{
				ret = _tr->delete_text();
				if (ret != rt::SUCCESS) return ret;
			}
			return rt::SUCCESS;
		}

		/*--------------------------------------------------*/
		size_t find_text(char const* _name)
		/*--------------------------------------------------*/
		{
			for (size_t i = 0; i < TRvec.size(); ++i)
				if (TRvec[i]->name() == _name)
					return i;
			return rerr_sizet;
		}
		/*--------------------------------------------------*/
		SDL_Texture* get_text(size_t _index)
		/*--------------------------------------------------*/
		{
			if (_index < 0 || _index >= TRvec.size()) return nullptr;
			return TRvec[_index]->text();
		}
		/*--------------------------------------------------*/

		/*--------------------------------------------------*/
		/*------------Struct Member Elements----------------*/
		/*--------------------------------------------------*/
		std::vector<TextRes*> TRvec;
		/*--------------------------------------------------*/

	/*--------------------------------------------------*/
	}TRL; // END	struct TRL_BASE_CLASS
	/*--------------------------------------------------*/
} // END	namespace ss

